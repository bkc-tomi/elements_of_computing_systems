// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    /* words */
    // register 0
    Register(in=in, load=r0, out=out0);
    // register 1
    Register(in=in, load=r1, out=out1);
    // register 2
    Register(in=in, load=r2, out=out2);
    // register 3
    Register(in=in, load=r3, out=out3);
    // register 4
    Register(in=in, load=r4, out=out4);
    // register 5
    Register(in=in, load=r5, out=out5);
    // register 6
    Register(in=in, load=r6, out=out6);
    // register 7
    Register(in=in, load=r7, out=out7);
    
    /* direct access logic */
    // write
    DMux8Way(in=load, sel=address, a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);
    // read
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
}